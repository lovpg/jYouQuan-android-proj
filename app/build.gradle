apply plugin: 'com.android.application'

def releaseTime(){
    return new Date().format("yyyy-MM-dd",TimeZone.getTimeZone("UTC"));
}

def keyStore=file('kdang.keystore')

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId             rootProject.ext.android.applicationId
        minSdkVersion             rootProject.ext.android.minSdkVersion
        targetSdkVersion          rootProject.ext.android.targetSdkVersion
        versionCode               rootProject.ext.android.versionCode
        versionName               rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        incremental = true;
        preDexLibraries = false
        javaMaxHeapSize "2g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile project(":libraries:frame_library")

    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["stetho-okhttp"]
    compile rootProject.ext.dependencies["stetho"]
    compile rootProject.ext.dependencies["okhttputils"]


    testCompile rootProject.ext.dependencies["junit"]
}
